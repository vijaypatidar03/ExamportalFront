{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/category.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"src/app/services/quiz.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/slide-toggle\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/button\";\nfunction AddQuizComponent_mat_option_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1.cid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.title, \" \");\n  }\n}\nexport let AddQuizComponent = /*#__PURE__*/(() => {\n  class AddQuizComponent {\n    constructor(_cat, _snack, _quiz) {\n      this._cat = _cat;\n      this._snack = _snack;\n      this._quiz = _quiz;\n      this.categories = [];\n      this.quizData = {\n        title: '',\n        description: '',\n        maxMarks: '',\n        numberOfQuestions: '',\n        active: true,\n        category: {\n          cid: ''\n        }\n      };\n    }\n    ngOnInit() {\n      this._cat.categories().subscribe(data => {\n        //categories load\n        this.categories = data;\n        // console.log(this.categories);\n      }, error => {\n        console.log(error);\n        Swal.fire('Error!!', 'error in loading data from server', 'error');\n      });\n    }\n    //\n    addQuiz() {\n      if (this.quizData.title.trim() == '' || this.quizData.title == null) {\n        this._snack.open('Title Required !!', '', {\n          duration: 3000\n        });\n        return;\n      }\n      //validation...\n      //call server\n      this._quiz.addQuiz(this.quizData).subscribe(data => {\n        Swal.fire('Success', 'quiz is added', 'success');\n        this.quizData = {\n          title: '',\n          description: '',\n          maxMarks: '',\n          numberOfQuestions: '',\n          active: true,\n          category: {\n            cid: ''\n          }\n        };\n      }, error => {\n        Swal.fire('Error!! ', 'Error while adding quiz', 'error');\n        console.log(error);\n      });\n    }\n  }\n  AddQuizComponent.ɵfac = function AddQuizComponent_Factory(t) {\n    return new (t || AddQuizComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.QuizService));\n  };\n  AddQuizComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddQuizComponent,\n    selectors: [[\"app-add-quiz\"]],\n    decls: 37,\n    vars: 7,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [3, \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"w100\"], [\"type\", \"text\", \"name\", \"title\", \"placeholder\", \"Enter here\", \"matInput\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"description\", \"placeholder\", \"Enter here\", \"matInput\", \"\", \"rows\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [\"type\", \"text\", \"name\", \"maxMarks\", \"placeholder\", \"Enter here\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"numberOfQuestions\", \"placeholder\", \"Enter here\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"active\", 1, \"mt20\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\", 1, \"mt20\", \"w100\"], [\"name\", \"category\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"text-center\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\"], [3, \"value\"]],\n    template: function AddQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"h1\");\n        i0.ɵɵtext(2, \"Add New Quiz\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 2)(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddQuizComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.addQuiz();\n        });\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Enter Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.quizData.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 4)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Enter Description \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"textarea\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_textarea_ngModelChange_14_listener($event) {\n          return ctx.quizData.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 7)(17, \"mat-form-field\", 4)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Maximum Marks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.quizData.maxMarks = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 7)(22, \"mat-form-field\", 4)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Number of Question\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.quizData.numberOfQuestions = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(26, \"mat-slide-toggle\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_mat_slide_toggle_ngModelChange_26_listener($event) {\n          return ctx.quizData.active = $event;\n        });\n        i0.ɵɵtext(27, \" Publish Status \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelementStart(29, \"mat-form-field\", 11)(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Categories\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"mat-select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_mat_select_ngModelChange_32_listener($event) {\n          return ctx.quizData.category.cid = $event;\n        });\n        i0.ɵɵtemplate(33, AddQuizComponent_mat_option_33_Template, 2, 2, \"mat-option\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 14)(35, \"button\", 15);\n        i0.ɵɵtext(36, \"Add\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.description);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.maxMarks);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.numberOfQuestions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.active);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.category.cid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    directives: [i4.MatCard, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.MatFormField, i6.MatLabel, i7.MatInput, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i8.MatSlideToggle, i9.MatSelect, i10.NgForOf, i11.MatOption, i12.MatButton],\n    styles: [\".w100[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return AddQuizComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}